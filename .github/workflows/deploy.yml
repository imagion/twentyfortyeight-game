name: Deploy

# Specifies the events that trigger the workflow
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions for the GITHUB_TOKEN to allow deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Ensures only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Pulls the code from the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Identifies whether you use npm or yarn
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # Sets up Node.js environment
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

        # Configures GitHub Pages deployment
      - name: Setup Pages
        uses: actions/configure-pages@v5
        # with:
        #   # Automatically inject basePath in your Next.js configuration file and disable
        #   # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
        #   #
        #   # You may remove this line if you want to manage the configuration yourself.
        #   static_site_generator: next

      # Restores cache to speed up dependencies installation
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      # Installs required npm or yarn dependencies
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # Builds the Next.js app
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
        # env: # Passes environment variables to the build
        #   NEXT_PUBLIC_ENV: ${{ secrets.NEXT_PUBLIC_ENV }}

      # Uploads the built files as an artifact for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Ensures the build job completes first
    steps:
      # Deploys the build artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
